<html><center><strong>Getting Started with OMV Addendum B:</strong></center></html>


{{ ::omv_logo.jpg?400 |}}


====== Installing OMV5 on a Raspberry PI ======
\\ 
\\ 
If preferred, this document is available in PDF form at this location → [[https://github.com/OpenMediaVault-Plugin-Developers/docs/blob/master/Adden-B-Installing_OMV5_on_an%20R-PI.pdf|Installing OMV5 on a Raspberry PI]]


===== Introduction =====

Installing OMV5 on Raspberry PI OS Lite, using a scripted install, is a relatively easy task.  This document is a guide for that process. 

\\ 


  
===== About this Guide =====

The purpose and intent of this guide is to provide a walk-through to get Raspberry Pi users (hereafter referred to as an “R-PI”) up and running as quickly and as easily as possible.  This guide assumes that users have a working Windows Client for installing and executing the needed utilities.  It is also assumed that Mac and Linux desktop users will be able to find, install, and use utilities equivalent to those called out in Prerequisites.

  * This guide contains links to external sources of information and software.  It's best used on an Internet connected PC.
  * This is a community document and a work in progress.  Input and feedback are welcome and can be sent to: [[omvguide@gmail.com]]

\\ 
===== Supported Devices =====

OMV5 will install on R-PI models 2B and higher.  In practical terms, the performance of the model 2B is marginal. 

\\ 
===== Not Supported =====

**__Desktop__ versions of Raspberry PI OS** are not supported.  (Use the Raspberry PI OS "**lite**" version.)

//**Legacy Raspberry PI's**//

R-PI models earlier than the 2B and the R-PI Zero have not been tested and are not supported.  They are far too slow to run a NAS application.  Please do not post on OMV's forum, expecting support for these models.

\\ 


===== Prerequisites =====


This installation process __requires__ a wired Ethernet connection and Internet access.
Typically, all that is needed to begin the installation is an Ethernet cable, a power supply sufficient for the R-PI model being used, and one SD-card (two are preferred for backup).

To get started, a few utilities are needed to expand, check, and work with the image.

  * Raspberry PI OS images are compressed with a .zip extension.  Users will need a utility like [[https://www.7-zip.org/|7-Zip]] to decompress the image.  7-Zip is installable on a Windows client.
  * To check the decompressed image, an [[https://md5-sha-checksum-utility.en.lo4d.com/windows|MD5 – SHA Checksum utility]] is needed.  This utility is portable, meaning it's not necessary to install it, but it may require support files.  Simply run the executable.
  * [[https://www.sdcard.org/downloads/formatter/index.html|SDformatter]] is a utility for formatting SD-cards, that does a trim operation on flash media to clear remnants of old files. SDformatter is installable on a Windows client.   
  * [[http://www.heise.de/ct/Redaktion/bo/downloads/h2testw_1.4.zip|h2testw_1.4]] is a flash media test program.  With a freshly formatted SD-card or USB thumbdrive, it writes files with known content and verifies the content in a read operation, detecting errors in the process.  **h2testw_1.4** downloads as a zip file.  By right clicking on the zip file, and using “Extract All”, 7-Zip will expand the zip file to a folder named **h2testw_1.4**  The executable inside this folder is a portable application. Run the executable. 
  * To burn a Raspberry PI OS image to an SD-card, [[https://www.balena.io/etcher/|Etcher]] is recommended.  (It burns the image and verifies it in one process.)  Etcher is installable on a Windows client.
  * [[https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html|PuTTY]] is an SSH client that will allow users to connect to their SBC, from a Windows client, and get on the command line.  PuTTY is installable on a Windows client. 
  * While 8GB is the minimum and will work fine, a 16GB card will provide longer life in the role of a boot drive.  Users are encouraged to get two SD-cards.  One is for the installation and the second is for backing up the OS installation, when configuration is complete.  


For the best experience, use only high quality **__new__** SD-cards, such as Samsung or SanDisk, that are rated A1 Class 10 or better.

{{ :armbian1_sd-card.jpg?80 |}}

**Important**
  * When selecting an Image, for best possible compatibility with OMV5, don't use an image with a desktop. 
  * On the [[https://www.raspberrypi.org/software/operating-systems/|Raspberry PI OS download page]], scroll down and select the  download for **Raspberry Pi OS Lite**

For the purposes of illustration, this SHA-256 hash for an older version of **Buster Lite** was: **9e5cf24ce483bb96e7736ea75ca422e3560e7b455eee63dd28f66fa1825db70e**
(* This hash number will change with the image, as images are updated. *)  Make a note of the hash number found, or bookmark the download web page for reference.  This will be used later.


{{ :divider.png?600 |}}

\\ 


===== Working With the Image File =====
\\ 

==== Verify the Archive file ====
 

After downloading the **Raspbian OS Lite** image, run a SHA hash to check for file corruption that may have occurred during the download.  
The Raspberry PI project provides a **SHA-256** hash check number for the downloaded Zip archive file.

**Beginners Note - DO NOT SKIP THIS STEP.**  

The chance of image corruption is highest when downloading and it's pointless to build a server with flawed software.  Even the slightest corruption of the image may ruin your installation and the effects may not be noticed until well after your server is built and in use.  Headaches can be avoided by checking the zip archive.

{{ :divider2.png?600 |}}

Verify the downloaded Zip file with the [[https://md5-sha-checksum-utility.en.lo4d.com/windows|MD5 & SHA checksum utility]].  Note that it's possible to “drag and drop” the file name into the utility, on the **File** line.  Otherwise, use the **Browse** button and navigate to the image file.

{{ ::r-pi2_md5check.jpg?600 |}}

With the previously noted down SHA-256 hash, or by referencing the [[https://www.raspberrypi.org/software/operating-systems/|Raspberry PI OS]] Raspberry PI OS Web page, compare the utility's result with the SHA-256 hash provided on the download page.  
For this illustration only it's: **9e5cf24ce483bb96e7736ea75ca422e3560e7b455eee63dd28f66fa1825db70e** 

With a SHA-256 match, the downloaded file is verified.

\\ 
\\ 


==== Decompress the Image ====

<html><center>Raspberry PI OS images are compressed and will need to be extracted with 7-Zip.  (The following process assumes 7-Zip has been installed.)  Highlight the compressed file, right click the mouse, and make the menu selections shown below.</center></html>

{{ ::r-pi3_win_explorer_extract.jpg?600 |}}

{{ :divider2.png?600 |}}
\\ 

<html><center>The result of the above action is the extraction of an uncompressed folder, with the image file inside.  Open that folder.  The image file's extension is <strong>.img</strong></center></html>

{{ ::r-pi4_win_explorer_extracted.jpg?600 |}}

{{ :divider2.png?600 |}}
\\ 

  
==== Format and Test Flash Media ====

Using SDFormatter, do a clean format:

(Note that SDFormatter does a trim operation on the card which cleans up remnants of deleted or previously existing files.)  

\\

<html><center>In most cases, SDFormatter will detect the SD-card or thumb-drive.  A volume label is not necessary, at this point, and the default options are fine.</center></html>

{{ ::r-pi5_sdformatter.jpg?400 |}}

{{ :divider2.png?600 |}}

<html><center>After the SD-card format is completed, open <strong>h2testw</strong> and select your language.</center></html>
<html><center>Then, click on <strong>Select target</strong></center></html>

{{ ::armbian7_h2testw.jpg?400 |}}

{{ :divider2.png?600 |}}

<html><center>Under <strong>Computer</strong>, select the flash media previously formatted.</center></html>

{{ ::armbian8_file_exp.jpg?300 |}}

{{ :divider2.png?600 |}}
 
<html><center><strong>Select Write+Verify</strong>.  (<strong>DO NOT</strong> check the <strong>endless verify</strong> box).</center></html>

{{ ::armbian9_h2testw.jpg?400 |}}

{{ :divider2.png?600 |}}

<html><center>A dialog similar to the following may pop up.  Ignore it and click on <strong>OK</strong>.</center></html>

{{ ::armbian10_h2testw_warning.jpg?400 |}}

{{ :divider2.png?600 |}}

<html><center>“<strong>Without errors</strong>” is the desired outcome.  If the media tests with errors or is much smaller than is indicated by the SD-card's labeled size, don't use it.</center></html>

{{ ::armbian11_h2testw_no_errors.jpg?400 |}}

After H2testw verifies the SD-card; **do one more clean format**, using **SDFormatter**, before flashing the card.  While optional, at this point, a volume label could be applied.
 
{{ :divider2.png?600 |}}

==== Flashing Raspberry PI OS Buster Lite onto an SD-card ====


<html><center><strong>Start Etcher:</strong></center></html>

Etcher, in most cases, will auto detect the SD-card or a USB thumb-drive.  Click on “**Select Image**” and navigate to the decompressed Raspberry PI OS image. Then click on **Flash!**

  * A windows confirmation dialog may pop up.  (Click on OK.)
  * Etcher will write the image, then verify it in one operation.

{{ ::armbian12_etcher.jpg?600 |}}

A “**Success**” flag will pop up when the job is finished and the Etcher window will display “Flash Another?”.  
The flash operation is complete.  (For the moment, leave the SD-card connected to the PC.)

{{ :divider.png?600 |}}
  
===== Enabling Raspberry PI OS's SSH Server for Remote Access =====

Raspberry PI OS is designed to have it's configuration finalized with a monitor and keyboard attached.  There's no need for a monitor and keyboard to support an OMV installation.   OMV was designed, from the ground up, to run as a headless server.

For the sake of convenience, Raspberry PI OS can be configured to enable it's SSH server on first boot, so the server can be accessed remotely with PuTTY.  The following will enable SSH access.

{{ :divider2.png?600 |}}

To insure the file system on the Raspberry PI OS flashed card is recognized, **unplug** the SD-card for a few moments and plug it back into the PC used to flash the SD-Card.  
<html><center>  * Open a file manager window, displaying the file contents of the of the SD-card.</center></html>
<html><center>  * Right click in the files side (right window) and select, **New**, and **Text Document**.</center></html>


{{ ::R-PI6_SSH_TXT_File.jpg?600 |}}

{{ :divider2.png?600 |}}

<html><center>A file is created.  Name the file **ssh** with no extension.</center></html>

{{ ::R-PI7_SSH_TXT_File2.jpg?600 |}}

<html><center>Confirm, as shown above, that the file **SSH** has no extension.  (This will mean removing **.txt** from the file name.)</center></html>

{{ :divider2.png?600 |}}

<html><center>The following warning may pop up, regarding a file without an extension.</center></html>
{{ ::R-PI7_SSH_TXT_File3.jpg?400 |}}
<html><center>Ignore it and select <strong>“Yes”</strong>.</center></html>

{{ :divider2.png?600 |}}
===== The First Boot =====

*At this point, a wired Ethernet connection is required to connect to the R-PI with PuTTY and to install OMV in a later process.*

  * Insure the R-PI is connect to wired Ethernet.  
  * Insert the SD-card with the Raspberry PI OS image, into the R-PI and apply power. 
  * Wait 3 to 5 minutes. 

The IP address to use for logging into the console is available from your DHCP server.  In most cases, your DHCP server will be running on your LAN's router.  Log into your router and look for the IP address associated with your R-PI.

\\ 

<html><center>(The following is an example.)</center></html>

{{ ::r-pi8_dhcp_server.jpg?600 |}}

<html><center>With the IP address noted, proceed to **First Time Login**.</center></html>

{{ :divider2.png?600 |  |}}

<html><center><strong>If there's a problem with obtaining a DHCP assigned IP address:</strong></center></html>

  * In the event that an IP address is not issued to your SBC, check the wired Ethernet connection and reboot the device.  This will mean unplugging and plugging the power supply back in.  Allow time for boot up (5 minutes or so) and check the DHCP server again.
  * If an address is not issued, or if the user doesn't know how to find the Raspberry Pi's IP address on their DHCP server, connect a monitor and a USB keyboard to watch the boot process until it completes.  If the IP address is not displayed at the end of the boot cycle, login with the user **pi** using the password **raspberry**.

Once logged in, type ''ip add'' on the command line.  Note the IP address of the Ethernet interface, in the output, and proceed to **First Time Login**.

(To be able to utilize Copy + Paste; working with the R-PI using SSH as detailed in **First Time Login**, is highly recommended.)

{{ :divider2.png?600 |}}

===== Raspberry PI OS - First Time Logon =====


<html><center><strong>Open PuTTY and type in the IP address as previously found.</strong></center></html>

{{ ::r-pi9_putty.jpg?400 |}}

<html><center>A PuTTY Security Alert will pop up in a first time connection.</center></html>  
<html><center>This is normal.  Ignore it and select <strong>Yes</strong>.</center></html> 

{{ :divider2.png?600 |}}

<html><center><strong>When the SSH window opens:</strong> Login as: <strong>pi</strong>    The Raspberry PI OS default password is: <strong>raspberry</strong></center></html> 

{{ ::r-pi10_1rst_login.jpg?600 |}}

\\


After logging in with the default password, it's __strongly__ recommended that the password for the **pi** user be changed.  

On the command line, type;

''passwd''

Re-enter the current password **raspberry**, then follow the prompts to enter and confirm a new password for the **pi** user password.  (Remember this password.)

\\ 
\\


===== Raspberry PI OS Updates and Upgrades =====

Before installing OMV, update and upgrade Raspberry PI OS using the following commands, executed one at at time:

''sudo apt-get update''  

''sudo apt-get upgrade -y ''

''sudo rm -f /etc/systemd/network/99-default.link''

When all three commands above are complete, type;  

''sudo reboot''

PuTTY will disconnect – this is expected.  Wait 3 to 5 minutes and reopen a new PuTTY SSH window and log in again.
 
** In the event that the SSH client does not respond to the IP address used for the Raspberry PI OS installation, look at your DHCP server to see if a “new” IP address has been assigned.**

\\ 

  
===== Install OMV =====


Installing OMV on Raspberry's is very easy, thanks to Arron Murray (ryecoaaron on the [[https://forum.openmediavault.org/|OMV Forum]]) for providing a comprehensive installation script that's executed from a single line. 

Copy the following line complete (**Ctrl+C**) and paste it into PuTTY's SSH window, with a right mouse click.  Then hit **Enter**.

''wget -O - https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash''


Once the script is running, click out of the SSH window so the script will not be interrupted.
**Note: Do Not close PuTTY** – that will terminate the root session.  Minimizing PuTTY is OK, but it must be running. 
     
Depending on several factors, running this script may take up to 30 minutes.

When the script is complete, the R-PI will automatically reboot.

\\ 
  
==== First Time GUI Logon ====

After 3 to 5 minutes, OMV can be logged in using the same IP address that was used for the SSH client, entered in a web browser address bar.   The web GUI user is **admin** and the default password is **openmediavault**

\\ 
**Note** - after the completion of the script:

In the rare event that the OMV console or SSH client does not respond to the IP address used during the installation, recheck  your DHCP server to see if a “new” IP address has been assigned.

(Typically, consumer router DHCP leases last at least 24 hours.  In cases where DHCP leases are very short - as it is with some versions of DD-WRT router firmware [10 minutes] - the lease issued to the SBC may time out at the end of the installation.  A different address may be issued on reboot.)

\\ 
==== Adding a new Administrative User with SSH access ====

OPTIONAL:
The user **pi** is added by Raspberry PI OS, by default.  Since this is a minor security risk, it's recommended that users add a new user for server admin purposes.  For the purposes of illustration, the user added in the following will be named **admin-user**.

\\
\\

<html><center>Under <strong>Access Rights Management</strong>, <strong>User</strong>, in the <strong>Users Tab</strong>, click on the <strong>Add</strong> button.</center></html>

{{ ::r-pi11_add_admin_user.jpg?600 |}}

{{ :divider2.png?600 |}}

<html><center>Add a new user name to the <strong>Name</strong> field. Set and confirm a </strong>Password</strong> for the new user.</center></html>
\\
<html><center>(*Note that the users <strong>admin</strong>, <strong>root</strong>, <strong>backup</strong>, and others are Linux system users. Do not attempt to create a user using these exact system account user names.  The add user dialog may reject attempts to configure a new user with the exact same name of an existing system user*)</center></html>

{{ ::r-pi12_add_admin_user2.jpg?400 |}}

{{ :divider2.png?600 |}}

<html><center>Click on the <strong>Groups</strong> tab. Under <strong>System Accounts</strong>, check the boxes for the following:
<strong>adm</strong>, <strong>root</strong>, <strong>ssh</strong>, <strong>sudo</strong>, <strong>users</strong>
Other groups may be selected if needed.</center></html>

{{ ::r-pi13_add_admin_user3.jpg?400 |}}

<html><center>Click <strong>Save</strong>.</center></html>

{{ :divider2.png?600 |}}


Using the new user name and password, test the result by ssh'ing in the R-PI with PuTTY.
If successful, the user **pi** can be deleted.  



  
===== Finishing Up =====


New users can continue with the setup of OMV using the [[https://github.com/OpenMediaVault-Plugin-Developers/docs/blob/master/Getting_Started-OMV5.pdf|Getting Started with Openmediavault 5 guide]], starting in the section titled  OMV - Initial Configuration.

All users are encouraged to review the section titled Operating System Backup for an easy process to clone your SBC's SD-Card.

**To add a Wireless Interface see Final Notes below.**

\\ 
===== Donate =====


If you found this guide to be helpful, and OMV on Raspberry PI OS to be useful, please consider a modest [[https://wiki.omv-extras.org/doku.php?id=start|donation]]  

In addition to enabling the installation of OMV on Raspberry PI's, OMV-extras.org develops plugin's for OMV that increase functionality, enabling Dockers VIA Portainer and other extensions for your Raspberry PI.  To support continuing development and to help offset some of the Developer's costs, even small donations are greatly appreciated.

\\ 
\\
\\
\\
\\
  
===== Final Notes: =====



==== Wireless Networking ====

First it should be noted that using a wireless interface, with a server, is not the best idea.  To prevent a number of issues such as interference, bandwidth contention issues with clients, etc., a server should be connected to the **wired** LAN ports of a router or a network switch.  However it is understood that, in some cases, wired connections may not be an option.

If your R-PI is equipped with a wireless interface, by default, OMV will not show it in the GUI but it can be added. 
  * An existing interface can be added as noted in the following.
  * After plugging it in, a compatible add-on USB wireless interface can be added in the same manner.

(*In the example below, a wireless USB adapter is being added to a Rock64 without an onboard interface.*)

Under **System**, **Network**, in the **Interfaces** tab, click on the **+ Add** button.  Select **Wi-Fi**.

{{ ::armbian16_omv_wireless_int.jpg?600 |}}

\\ 
\\ 
  
When the **Add Wi-Fi** dialog box pops up, select the drop down arrow next to **Device**.  The on-board or add-on  wireless interface will be the only interface in the list.  Select it.

In the **Wi-Fi** section, add the **SSID** for the wireless network and the encryption **Password**.

{{ ::armbian17_omv_wireless_dialog.jpg?300 |}}

\\ 
\\ 

Using the right scrool bar, scroll down to **IPv4**.  Next to **Method**, click the drop down arrow and make the appropriate selection.  (DHCP is recommended for beginners.)

{{ ::armbian18_omv_wireless_dialog2.jpg?300 |}}

<html><center>Click, <strong>Save</strong>.</center></html>

At this point, the wireless interface will appear under **System**, **Network**, in the **Interfaces** tab.  Further configuration can be done, as needed, by editing the interface in the Interfaces tab.
\\ 

{{ :divider.png?600 |}}
\\ 
To further configure the R-PI; refer to the [[https://github.com/OpenMediaVault-Plugin-Developers/docs/blob/master/Getting_Started-OMV5.pdf|Getting Started with Openmediavault 5 guide]], starting in the section titled  OMV - Initial Configuration.